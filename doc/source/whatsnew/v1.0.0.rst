.. _whatsnew_1000:

What's new in 1.0.0 (??)
------------------------

.. warning::

   Starting with the 0.25.x series of releases, pandas only supports Python 3.5.3 and higher.
   See :ref:`install.dropping-27` for more details.

.. warning::

   The minimum supported Python version will be bumped to 3.6 in a future release.

{{ header }}

These are the changes in pandas 1.0.0. See :ref:`release` for a full changelog
including other versions of pandas.


Enhancements
~~~~~~~~~~~~

.. _whatsnew_1000.enhancements.other:

-
-

Other enhancements
^^^^^^^^^^^^^^^^^^

.. _whatsnew_1000.api_breaking:

-
-

Backwards incompatible API changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. _whatsnew_1000.api.other:

Groupby.transform(str) validates name is an aggregation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

In previous releases, :meth:`DataFrameGroupBy.transform` and
:meth:`SeriesGroupBy.transform`  did not validate that the function name
passed was actually the name of an aggregation. As a result, users might get a
cryptic error or worse, erroneous results. Starting with this release, these
methods will rised if the name of a non-aggregation is passed to them. There
is no change in the behavior associated with passing a callable.

Users who relied on :meth:`DataFrameGroupBy.transform` or :meth:`SeriesGroupBy.transform`
for transformations such as :meth:`DataFrameGroupBy.rank`, :meth:`DataFrameGroupBy.ffill`,
etc, should instead call these method directly
(:issue:`27597`) (:issue:`14274`) (:issue:`19354`) (:issue:`22509`).

.. ipython:: python

    df = pd.DataFrame([0, 1, 100, 99])
    labels = [0, 0, 1, 1]
    g = df.groupby(labels)

*Previous behavior*:

.. code-block:: ipython

    In [1]: g.transform('ers >= Decepticons')
    AttributeError: 'DataFrameGroupBy' object has no attribute 'ers >= Decepticons'

    g.transform('rank')
    Out[14]:
         0
    0  1.0
    1  1.0
    2  2.0
    3  2.0

    g.rank()
    Out[15]:
         0
    0  1.0
    1  2.0
    2  2.0
    3  1.0

*New behavior*:

.. ipython:: python
   :okexcept:

   g.transform('ers >= Decepticons')
   g.transform('rank')


Other API changes
^^^^^^^^^^^^^^^^^

-
-

.. _whatsnew_1000.deprecations:

Deprecations
~~~~~~~~~~~~

-
-

.. _whatsnew_1000.prior_deprecations:

Removal of prior version deprecations/changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Removed the previously deprecated :meth:`Series.get_value`, :meth:`Series.set_value`, :meth:`DataFrame.get_value`, :meth:`DataFrame.set_value` (:issue:`17739`)
-
-

.. _whatsnew_1000.performance:

Performance improvements
~~~~~~~~~~~~~~~~~~~~~~~~

- Performance improvement in indexing with a non-unique :class:`IntervalIndex` (:issue:`27489`)
- Performance improvement in `MultiIndex.is_monotonic` (:issue:`27495`)


.. _whatsnew_1000.bug_fixes:

Bug fixes
~~~~~~~~~

-

Categorical
^^^^^^^^^^^

-
-


Datetimelike
^^^^^^^^^^^^
- Bug in :meth:`Series.__setitem__` incorrectly casting ``np.timedelta64("NaT")`` to ``np.datetime64("NaT")`` when inserting into a :class:`Series` with datetime64 dtype (:issue:`27311`)
- Bug in :meth:`Series.dt` property lookups when the underlying data is read-only (:issue:`27529`)
-


Timedelta
^^^^^^^^^

-
-

Timezones
^^^^^^^^^

-
-


Numeric
^^^^^^^
- Bug in :meth:`DataFrame.quantile` with zero-column :class:`DataFrame` incorrectly raising (:issue:`23925`)
-
-

Conversion
^^^^^^^^^^

-
-

Strings
^^^^^^^

-
-


Interval
^^^^^^^^

-
-

Indexing
^^^^^^^^

-
-

Missing
^^^^^^^

-
-

MultiIndex
^^^^^^^^^^

-
-

I/O
^^^

-
-

Plotting
^^^^^^^^

-
-

Groupby/resample/rolling
^^^^^^^^^^^^^^^^^^^^^^^^

-
-

Reshaping
^^^^^^^^^

-
-

Sparse
^^^^^^

-
-


Build Changes
^^^^^^^^^^^^^


ExtensionArray
^^^^^^^^^^^^^^

-
-


.. _whatsnew_1000.contributors:

Contributors
~~~~~~~~~~~~
