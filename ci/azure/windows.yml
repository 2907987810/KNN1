parameters:
  name: ''
  vmImage: ''

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      py38_np18:
        ENV_FILE: ci\\deps\\azure-windows-38.yaml
        PATTERN: "not slow and not network"

      py39:
        ENV_FILE: ci\\deps\\azure-windows-39.yaml
        PATTERN: "not slow and not network and not high_memory"

  steps:
    - powershell: |
        Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      displayName: Add conda to PATH

    - script: |
        conda update --quiet --yes conda
      displayName: Update conda

    - task: Cache@2
      displayName: Use cached Anaconda environment
      inputs:
        key: 'conda | "$(Agent.OS)" | "$(ENV_FILE)"'
        restoreKeys: | 
          python | "$(Agent.OS)"
          python
        path: $(CONDA_CACHE_DIR)
        cacheHitVar: CONDA_CACHE_RESTORED

    - script: |
        conda env create -q --file $(ENV_FILE)
      displayName: Create Anaconda environment
      condition: eq(variables.CONDA_CACHE_RESTORED, 'false')

    - script: |
        call activate pandas-dev
        python setup.py build_ext -q -j 2
        python -m pip install -e . --no-build-isolation --no-use-pep517
      displayName: Build pandas

    - script: |
        call activate pandas-dev
        sh ci/run_tests.sh
      displayName: Test

    - script: |
        call activate pandas-dev
        python -c "import pandas; pandas.show_versions();"
      displayName: Build versions

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        failTaskOnFailedTests: true
        testResultsFiles: 'test-data.xml'
        testRunTitle: ${{ format('{0}-$(ENV_FILE)', parameters.name) }}
      displayName: Publish test results

    - script: |
        call activate pandas-dev
        python ci/print_skipped.py
      displayName: Print skipped tests
