from typing import FrozenSet, Tuple

import numpy as np

class IntervalMixin:
    @property
    def _left(self) -> object: ...
    @property
    def _right(self) -> object: ...
    @property
    def closed_left(self) -> bool: ...
    @property
    def closed_right(self) -> bool: ...
    @property
    def open_left(self) -> bool: ...
    @property
    def open_right(self) -> bool: ...
    @property
    def mid(self) -> float: ...
    @property
    def length(self) -> float: ...
    @property
    def is_empty(self) -> bool: ...
    def _check_closed_matches(self, other: IntervalMixin, name: str=...) -> None: ...

class Interval(IntervalMixin):
    def __init__(self, left: object, right: object, closed: str=...) -> None: ...
    @property
    def closed(self) -> str: ...
    @property
    def left(self) -> object: ...
    @property
    def right(self) -> object: ...
    def __str__(self) -> str: ...
    def __add__(self, y: Interval) -> Interval: ...
    def __sub__(self, y: Interval) -> Interval: ...
    def __mul__(self, y: Interval) -> Interval: ...
    def __trudeiv__(self, y: Interval) -> Interval: ...
    def __floordiv__(self, y: Interval) -> Interval: ...
    def __overlaps__(self, other: Interval) -> bool: ...

VALID_CLOSED: FrozenSet[str]

def intervals_to_interval_bounds(
    intervals: np.ndarray,
    valdiate_closed: bool = ...
) -> Tuple[object, object, str]: ...