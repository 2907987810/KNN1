# flake8: noqa

from typing import Any

class IntervalMixin:
    left: Any
    right: Any
    closed: str
    @property
    def closed_left(self): ...
    @property
    def closed_right(self): ...
    @property
    def open_left(self): ...
    @property
    def open_right(self): ...
    @property
    def mid(self): ...
    @property
    def length(self): ...
    @property
    def is_empty(self): ...

class Interval(IntervalMixin):
    def __init__(self, left, right, closed: str = ...): ...
    def __hash__(self): ...
    def __contains__(self, key): ...
    def __richcmp__(self, other, op: int): ...
    def __reduce__(self): ...
    def __repr__(self): ...
    def __str__(self): ...
    def __add__(self, y): ...
    def __sub__(self, y): ...
    def __mul__(self, y): ...
    def __div__(self, y): ...
    def __truediv__(self, y): ...
    def __floordiv__(self, y): ...
    def overlaps(self, other): ...

def intervals_to_interval_bounds(intervals, validate_closed=...): ...

class IntervalTree(IntervalMixin):
    root: Any
    dtype: Any
    def __init__(self, left, right, closed=..., leaf_size=...): ...
    @property
    def left_sorter(self): ...
    @property
    def right_sorter(self): ...
    @property
    def is_overlapping(self): ...
    @property
    def is_monotonic_increasing(self): ...
    def get_loc(self, key): ...
    def get_loc_interval(self, key_left, key_right): ...
    def get_indexer(self, target): ...
    def get_indexer_non_unique(self, target): ...
    def __repr__(self): ...
    def clear_mapping(self): ...
