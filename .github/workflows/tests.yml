name: Tests

on:
  push:
    branches: master
  pull_request:
    branches: master


jobs:
  tests:
    name: Run tests
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:latest
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mysql:
        image: mysql:latest
        ports:
        - 8888:3306
        env:
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries 5
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
        - os: ubuntu-latest
          env_file: travis-36-cov.yaml
          pattern: "((not slow and not network) or (single and db))"
          pandas_testing_mode: deprecate
          coverage: true

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Create databases
      run: |
        mysql -e 'create database pandas_nosetest;' || mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} --user root --password password -e "CREATE DATABASE pandas_nosetest;"
        psql -c 'create database pandas_nosetest;' -U postgres
      if: matrix.coverage

    - name: Setup environment and build pandas
      run: |
        export PATH=$HOME/miniconda3/bin:$PATH
        ci/setup_env.sh
      env:
        ENV_FILE: ci/deps/${{ matrix.env_file }}

    - name: Run tests
      run: |
        export PATH=$HOME/miniconda3/bin:$PATH
        source activate pandas-dev
        ci/run_tests.sh
      env:
        PATTERN: ${{ matrix.pattern }}
        PANDAS_TESTING_MODE: ${{ matrix.pandas_testing_mode }}
        COVERAGE: ${{ matrix.coverage }}
